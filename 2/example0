#!/bin/bash

# Date will be substituted and printed
echo "Starting program at $(date)"

# $0: program's name 
# $#: number of arguments
# $$: process identification number (PID) for the current script
echo "Running program $0 with $# arguments with pid $$"


# $@: all the arguments
# loop through every arguments
for file in "$@"; do
    # "$file" is variable that hold the file name
    # use grep to find the string "foobar" in "$file"
    grep foobar "$file" > /dev/null 2> /dev/null
    # when pattern is not found, grep has exit status 1
    # we redirect STDOUT and STDERR to a null register since we do not care
    # about them

    # $?: return code of the previous command
    # check if $? is not equal (-ne) to 0
    # more on -ne: https://www.man7.org/linux/man-pages/man1/test.1.html
    # when perform comparison in bash, use [[]] over [] because chances of
    # making mistakes are lower although it won't be portable to `sh`
    # more on [[]] vs [] here: https://mywiki.wooledge.org/BashFAQ/031
    if [[ $? -ne 0 ]]; then
        echo "File $file does not have any foobar, adding one"
        fi
        echo "# foobar" >> "$file"
done


